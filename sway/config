exec mako
exec systemctl --user start pipewire
exec gammastep
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term foot
#set $menu wofi --show run
set $menu bemenu-run -i --fn "JetBrainsMono 13" -p "" --nb "#2C323E" --nf "#9899a0" --sb "#BF616A" --sf "#2C323E" 
seat seat0 xcursor_theme breeze 24
output * bg ~/Pictures/anime/Pandora.Hearts.full.2067837.jpg fill

#output DVI-D-1 scale 1.1
 exec swayidle -w \
          timeout 300 'swaylock -f -c 000000' \
          timeout 400 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
	  timeout 600 'systemctl suspend' \
          before-sleep 'swaylock -f -c 000000'
# input
input * {
	xkb_layout us,ru
	xkb_options grp:caps_toggle
	xkb_capslock disable
}

    floating_modifier $mod normal
bindsym --to-code {   
$mod+Return exec $term
$mod+Shift+q kill

$mod+d exec $menu
$mod+r exec $term -e ranger

$mod+Ctrl+c reload

$mod+Ctrl+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
$mod+Ctrl+k exec .config/sway/scripts/bemenu_kill_process
$mod+Ctrl+F1 exec .config/sway/scripts/bemenu_shutdown
$mod+Ctrl+f exec .config/sway/scripts/bemenu_findfile
XF86Calculator exec .config/sway/scripts/bemenu_calc
$mod+Shift+d exec .config/sway/scripts/bemenu_dictionary
$mod+Shift+r exec .config/sway/scripts/bemenu_screenrecorder
$mod+Shift+F8 exec .config/sway/scripts/bemenu_fzf
$mod+Shift+o exec .config/sway/scripts/bemenu_ocr
$mod+Shift+m exec .config/sway/scripts/bemenu_cmuscontrol
$mod+Shift+F10 exec .config/sway/scripts/bemenu_ffmpeg
$mod+F12 exec .config/sway/scripts/switchworkspaces
$mod+Shift+t exec .config/sway/scripts/bemenu_transmission
}
# visual
gaps inner 2
gaps outer 2
smart_gaps on
smart_borders on
default_border none
default_border pixel 3
client.focused "#b53389" "#b53389" "#ffffff" "#b53389" 
    bindsym --to-code {
# Moving around:
    # Move your focus around
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right
    }
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code {
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    }
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    bindsym $mod+Tab workspace next_on_output
    bindsym $mod+Shift+Tab workspace prev_on_output

#
#screenshot
    bindsym Print exec grim
    bindsym Ctrl+Print exec grim - | wl-copy
    bindsym $mod+Print exec grim -g "$(slurp)"
    bindsym $mod+Ctrl+Print exec grim -g "$(slurp)" - | wl-copy
    bindsym $mod+Shift+Print exec grim -g "$(slurp)" - | swappy -f - -o - | pngquant -
#sound
    bindsym XF86AudioRaiseVolume exec pamixer -i 5
    bindsym XF86AudioLowerVolume exec pamixer -d 5
    bindsym $mod+Pause exec playerctl play-pause
    #bindsym $mod+Ctrl+p exec pamixer -i 5
    #bindsym $mod+Ctrl+l exec pamixer -d 5
# Layout stuff:
    #bindsym $mod+shift+z for_window [app_id="org.pwmt.zathura"] focus 
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code {
    $mod+b splith
    $mod+v splitv
}
    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    bindsym --to-code {
    $mod+w layout tabbed
    $mod+e layout toggle split
}
    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+f floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle
    
    # Move focus to the parent container
    bindsym --to-code {
    $mod+a focus parent
    $mod+shift+a focus child
    }
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#based resize
    bindsym $mod+Ctrl+Right resize shrink width 3 px or 3 ppt
    bindsym $mod+Ctrl+Left resize grow width 3 px or 3 ppt
    bindsym $mod+Ctrl+Down resize shrink height 3 px or 3 ppt
    bindsym $mod+Ctrl+Up resize grow height 3 px or 3 ppt
#hide bar
bindsym --to-code $mod+o exec killall -SIGUSR1 waybar
#bar 
bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*
